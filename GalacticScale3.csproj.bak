<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <DevEnvLoc>$(MSBuildThisFileDirectory)DevEnv.targets</DevEnvLoc>
        <TargetFramework>net472</TargetFramework>
        <RootNamespace>GalacticScale</RootNamespace>
        <RestoreAdditionalProjectSources>
            https://api.nuget.org/v3/index.json;
            https://nuget.bepinex.dev/v3/index.json;
            https://nuget.samboy.dev/v3/index.json
        </RestoreAdditionalProjectSources>
    </PropertyGroup>
    <Import Project="$(DevEnvLoc)" Condition="Exists('$(DevEnvLoc)')" />
    <PropertyGroup>
        <AssemblyName>GalacticScale</AssemblyName>
        <Description>Galaxy Customization for Dyson Sphere Program</Description>
        <Version>2.76.2</Version>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <LangVersion>9.0</LangVersion>
        <OutDir>bin/$(Configuration)</OutDir>
        <OutDir Condition="Exists($(PluginDir))">$(PluginDir)\Galactic_Scale-GalacticScale\</OutDir>
    </PropertyGroup>

    
    <ItemGroup>
        <PackageReference Include="BepInEx.Analyzers" Version="1.*" PrivateAssets="all" />
        <PackageReference Include="BepInEx.Core" Version="5.*" />
        <PackageReference Include="BepInEx.PluginInfoProps" Version="1.*" />
        <PackageReference Include="UnityEngine.Modules" Version="2022.3.53" IncludeAssets="compile" />
       <PackageReference Include="DysonSphereProgram.GameLibs" Version="0.10.33.26943-r.0" IncludeAssets="compile" />
        <PackageReference Include="DysonSphereProgram.Modding.NebulaMultiplayerModApi" Version="2.0.0" IncludeAssets="compile" />
    </ItemGroup>
    
    <ItemGroup Condition="'$(TargetFramework.TrimEnd(`0123456789`))' == 'net'">
        <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.2" PrivateAssets="all" />
    </ItemGroup>

    <ItemGroup>
<!--        <Reference Include="Assembly-CSharp">-->
<!--          <HintPath>d:\Assembly-CSharp-nstrip.dll</HintPath>-->
<!--        </Reference>-->
<!--        <Reference Include="Assembly-CSharp">-->
<!--          <HintPath>D:\Assembly-CSharp-nstrip.dll</HintPath>-->
<!--        </Reference>-->
<!--        <Reference Include="BCE">-->
<!--          <HintPath>C:\Users\Administrator\AppData\Roaming\r2modmanPlus-local\DysonSphereProgram\profiles\Default\BepInEx\plugins\innominata-BepInEx_Console_Extensions\BCE.dll</HintPath>-->
<!--        </Reference>-->
<!--        <Reference Include="Assembly-CSharp">-->
<!--          <HintPath>Assembly-CSharp_publicized.dll</HintPath>-->
<!--        </Reference>-->
        <Reference Include="GSUI">
            <HintPath>Package\GSUI.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.UI">
          <HintPath>C:\Program Files (x86)\Steam\steamapps\common\Dyson Sphere Program\DSPGAME_Data\Managed\UnityEngine.UI.dll</HintPath>
        </Reference>
    </ItemGroup>
    <Target Name="CheckDevEnv" BeforeTargets="PrepareForBuild">
        <PropertyGroup>
            <DevEnvNotFound>false</DevEnvNotFound>
        </PropertyGroup>
        
        <PropertyGroup Condition="!Exists('DevEnv.targets')">
            <DevEnvNotFound>true</DevEnvNotFound>
        </PropertyGroup>
        
        <Warning Condition="!Exists('DevEnv.targets')" Text="DevEnv.targets not found. Running setup..." />
        <Exec Condition="'$(DevEnvNotFound)' == 'true'" Command="powershell.exe -ExecutionPolicy Bypass -File &quot;$(MSBuildProjectDirectory)\setup_devenv.ps1&quot;" />
        <Error Condition="!Exists('DevEnv.targets')" Text="Failed to create DevEnv.targets. Please run setup_devenv.ps1 manually." />
    </Target>
    <ItemGroup>

        <None Update="LICENSE">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
        <None Update="Package\galacticbundle">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <TargetPath>.\galacticbundle</TargetPath>
        </None>
        <None Remove="src\**" />
        <None Remove="srcOLD\**" />
    </ItemGroup>

    <ItemGroup>
        <None Remove="Assets\galaxy.json" />
        <EmbeddedResource Include="Assets\galaxy.json" />
        <EmbeddedResource Remove="src\**" />
        <EmbeddedResource Remove="srcOLD\**" />
    </ItemGroup>

    <ItemGroup>
        <Compile Remove="src\**" />
        <Compile Remove="srcOLD\**" />
    </ItemGroup>

    <!-- Add a target to synchronize version numbers before build -->
    <Target Name="SyncVersionNumbers" BeforeTargets="PrepareForBuild">
        <Message Text="Synchronizing version numbers from README.md..." Importance="high" />
        
        <!-- Check if PowerShell is available -->
        <Exec Command="powershell -Command &quot;&amp; { exit 0 }&quot;" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="PowerShellExists" />
        </Exec>
        
        <!-- Run the version sync script if PowerShell exists -->
        <Exec 
            Command="powershell -ExecutionPolicy Bypass -File &quot;$(MSBuildProjectDirectory)\update-version.ps1&quot;" 
            Condition="'$(PowerShellExists)' == '0'"
            ContinueOnError="false" 
        />
        
        <Warning 
            Text="PowerShell not found. Version numbers were not synchronized. Please run update-version.ps1 manually." 
            Condition="'$(PowerShellExists)' != '0'" 
        />
    </Target>
    
</Project>
